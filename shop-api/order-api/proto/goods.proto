syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";

service Goods{
  //商品接口，过滤条件比较多
  rpc GoodsList(GoodsFilterRequest) returns(GoodsListResponse);

  //批量查询商品，比如在购物车，要将所选的商品全部下单，中间有个过程，就是要查询商品的信息，商品的下单和查询是两个微服务，
  //跨微服务调用时，如果只有一个查询一个商品就得一个一个查询，性能比较低，所以有很多批量获取商品信息的需求
  rpc BatchGetGoods(BatchGoodsIdInfo) returns(GoodsListResponse);
  //添加商品，除了商品model里定义的基本字段，还有一个库存字段，这也是必要的信息，库存是一个单独的微服务，商品的表里没必要添加库存这字段
  rpc CreateGoods(CreateGoodsInfo) returns (GoodsInfoResponse);
  rpc DeleteGoods(DeleteGoodsInfo) returns (google.protobuf.Empty);
  rpc UpdateGoods(CreateGoodsInfo) returns (google.protobuf.Empty);
  rpc GetGoodsDetail(GoodInfoRequest) returns(GoodsInfoResponse);

  //获取所有商品分类，首页要展示
  rpc GetAllCategorysList(google.protobuf.Empty) returns(CategoryListResponse); //获取所有的分类
  //获取子分类，即返回本分类的信息，也返回本分类的所有子分类
  rpc GetSubCategory(CategoryListRequest) returns(SubCategoryListResponse);
  rpc CreateCategory(CategoryInfoRequest) returns(CategoryInfoResponse); //新建分类信息
  rpc DeleteCategory(DeleteCategoryRequest) returns(google.protobuf.Empty); //删除分类
  rpc UpdateCategory(CategoryInfoRequest) returns(google.protobuf.Empty); //修改分类信息

  //品牌和轮播图
  rpc BrandList(BrandFilterRequest) returns(BrandListResponse); //
  rpc CreateBrand(BrandRequest) returns(BrandInfoResponse); //新建品牌信息
  rpc DeleteBrand(BrandRequest) returns(google.protobuf.Empty); //删除品牌
  rpc UpdateBrand(BrandRequest) returns(google.protobuf.Empty); //修改品牌信息

  //轮播图
  rpc BannerList(google.protobuf.Empty) returns(BannerListResponse); //获取轮播列表信息
  rpc CreateBanner(BannerRequest) returns(BannerResponse); //添加banner图
  rpc DeleteBanner(BannerRequest) returns(google.protobuf.Empty); //删除轮播图
  rpc UpdateBanner(BannerRequest) returns(google.protobuf.Empty); //修改轮播图

  //品牌分类
  rpc CategoryBrandList(CategoryBrandFilterRequest) returns(CategoryBrandListResponse); //获取轮播列表信息
  //通过category获取brands
  rpc GetCategoryBrandList(CategoryInfoRequest) returns(BrandListResponse);
  rpc CreateCategoryBrand(CategoryBrandRequest) returns(CategoryBrandResponse); //添加banner图
  rpc DeleteCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty); //删除轮播图
  rpc UpdateCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty); //修改轮播图
}

message CategoryListRequest {
  int32 id = 1;
  int32 level = 2;
}

message CategoryInfoRequest {
  int32 id = 1;
  string name = 2;
  int32 parentCategory = 3;
  int32 level = 4;
  bool isTab = 5;
}

message DeleteCategoryRequest {
  int32 id = 1;
}

message QueryCategoryRequest {
  int32 id = 1;
  string name = 2;
}

message CategoryInfoResponse {
  int32 id = 1;
  string name = 2;
  int32 parentCategory = 3;
  int32 level = 4;
  bool isTab = 5;
}

message CategoryListResponse {
  int32 total = 1;
  repeated CategoryInfoResponse data = 2;
  string jsonData = 3;
}

message SubCategoryListResponse {
  int32 total = 1;
  CategoryInfoResponse info = 2;
  repeated CategoryInfoResponse subCategorys = 3;
}

message CategoryBrandFilterRequest  {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message FilterRequest  {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message CategoryBrandRequest{
  int32 id = 1;
  int32 categoryId = 2;
  int32 brandId = 3;
}
message CategoryBrandResponse{
  int32 id = 1;
  BrandInfoResponse brand = 2;
  CategoryInfoResponse category = 3;
}

message BannerRequest {
  int32 id = 1;
  int32 index = 2;
  string image = 3;
  string url = 4;
}

message BannerResponse {
  int32 id = 1;
  int32 index = 2;
  string image = 3;
  string url = 4;
}

message BrandFilterRequest {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message BrandRequest {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BrandInfoResponse {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BrandListResponse {
  int32 total = 1;
  repeated BrandInfoResponse data = 2;
}

message BannerListResponse {
  int32 total = 1;
  repeated BannerResponse data = 2;
}

message CategoryBrandListResponse {
  int32 total = 1;
  repeated CategoryBrandResponse data = 2;
}



message BatchGoodsIdInfo {
  repeated int32 id = 1;
}


message DeleteGoodsInfo {
  int32 id = 1;
}

message CategoryBriefInfoResponse {
  int32 id = 1;
  string name = 2;
}

message CategoryFilterRequest {
  int32 id = 1;
  bool  isTab = 2;
}

message GoodInfoRequest {
  int32 id = 1;
}

message CreateGoodsInfo {
  int32 id = 1;
  string name = 2;
  string goodsSn = 3;
  int32 stocks = 7; //库存，
  float marketPrice = 8;
  float shopPrice = 9;
  string goodsBrief = 10;
  string goodsDesc = 11;
  bool shipFree = 12;
  repeated string images = 13;
  repeated string descImages = 14;
  string goodsFrontImage = 15;
  bool isNew = 16;
  bool isHot = 17;
  bool onSale = 18;
  int32 categoryId = 19;
  int32 brandId = 20;
}

message GoodsReduceRequest {
  int32 GoodsId = 1;
  int32 nums = 2;
}

message BatchCategoryInfoRequest {
  repeated int32 id = 1;
  int32 goodsNums = 2;
  int32 brandNums = 3;
}

message GoodsFilterRequest  {
  //价格区间过滤，一般是给最大值最小值就可以
  int32 priceMin = 1;
  int32 priceMax = 2;
  //是否是热门、新品、在tab也展示，这三个条件，首页会用到
  bool  isHot = 3;
  bool  isNew = 4;
  bool  isTab = 5;
  //点击分类
  int32 topCategory = 6;
  //分页信息
  int32 pages = 7;
  int32 pagePerNums = 8;
  //搜索查询关键字
  string keyWords = 9;
  //点击某个品牌
  int32 brand = 10;
}


message GoodsInfoResponse {
  int32 id = 1;
  int32 categoryId = 2;
  string name = 3;
  string goodsSn = 4;
  int32 clickNum = 5;
  int32 soldNum = 6;
  int32 favNum = 7;
  float marketPrice = 9;
  float shopPrice = 10;
  string goodsBrief = 11;
  string goodsDesc = 12;
  bool shipFree = 13;
  repeated string images = 14;
  repeated string descImages = 15;
  string goodsFrontImage = 16;
  bool isNew = 17;
  bool isHot = 18;
  bool onSale = 19;
  int64 addTime = 20;
  CategoryBriefInfoResponse category = 21;
  BrandInfoResponse brand = 22;
}

message GoodsListResponse {
  int32 total = 1;
  repeated GoodsInfoResponse data = 2;
}